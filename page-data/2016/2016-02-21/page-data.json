{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2016/2016-02-21/","result":{"data":{"markdownRemark":{"html":"<p>Creating your own blog isn't complicated and is free. Jekyll is great for creating blogs by transforming your plain text into static websites. With Jekyll you have more control over your site from styling to adding more features. When using Jekyll you don't have to worry about hosting companies, you can easily deploy your site using GitHub for free. In this blog I will cover how to create a blog site with Jekyll.</p>\n<h3>Getting Started</h3>\n<p>Jekyll is a parsing engine bundled as a ruby gem, the first thing you would need to do is install ruby onto your machine. There are many resources online for installing ruby and it varies depending on your operating system. Once you have ruby installed, you are able to install gems which is a shareable code. Once you installed ruby,\nrun the following commands inside your terminal.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">  ~ $ gem <span class=\"token function\">install</span> jekyll\n  ~ $ jekyll new myblog\n  ~ $ <span class=\"token builtin class-name\">cd</span> myblog\n  ~ $ jekyll serve</code></pre></div>\n<p>The first command <code class=\"language-text\">gem install jekyll</code> will install this gem into your machine, this allow you to use the command line interface (CLI) <code class=\"language-text\">jekyll</code> in your terminal. The command <code class=\"language-text\">jekyll new blog</code> will create the jekyll structure for your blog site. This basically creates all the directories and files you will need to get started with jekyll inside a directory called <code class=\"language-text\">myblog</code>. The command <code class=\"language-text\">cd myblog</code> is a built-in CLI that changes directory to myblog, this will enter the directory you just created. The last command is a jekyll CLI that creates a local server on your machine on port 4000, which you can see the website by going to <code class=\"language-text\">localhost:4000</code> on any browser.</p>\n<p>It's important to understand what's happening when creating a local server on your machine. In web development all the files for a web page is saved on a hosting server, we are doing something similar by creating local server on our machine for all the files to be served. When you go to <code class=\"language-text\">localhost:4000</code> on any browser, it is getting all the files like HTML, CSS, and Javascript needed to render your web page. The port number is just a TCP port that is available on your machine. To close your server run <code class=\"language-text\">ctrl + c</code>.</p>\n<h3>Jekyll Structure</h3>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\">  myblog\n  ├── <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">includes\n  |   ├── footer.html\n  |   └── head.html\n  |   └── header.html\n  |   └── icon-github.html\n  |   └── icon-github.svg\n  |   └── icon-twitter.html\n  |   └── icon-twitter.svg\n  ├── </span><span class=\"token punctuation\">_</span></span>layouts\n  |   ├── default.html\n  |   └── page.html\n  |   └── post.html\n  ├── <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">posts\n  |   ├── 2016-02-21-welcome-to-jekyll.markdown\n  ├── </span><span class=\"token punctuation\">_</span></span>sass\n  |   └── <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">base.scss\n  |   └── </span><span class=\"token punctuation\">_</span></span>layout.scss\n  |   └── <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">syntax-highlighting.scss\n  ├── css\n  |   └── main.scss\n  ├── .gitignore\n  ├── </span><span class=\"token punctuation\">_</span></span>config.yml\n  ├── about.md\n  ├── feed.xml\n  └── index.html</code></pre></div>\n<p>All this was created when you ran the <code class=\"language-text\">jekyll new myblog</code> CLI command in your terminal. This provides you with an example of a blog site using jekyll and understanding all the files is essential to creating your own custom blog site. It's important to know that Jekyl uses the <code class=\"language-text\">Liquid</code> templating language, for more information click <a href=\"https://docs.shopify.com/themes/liquid\" target=\"_blank\">here</a>. What is great about this language is that it allows HTML reuse and has built-in filtering methods which is great for filtering your posts.</p>\n<h3>_includes</h3>\n<p>This folder is used when you have reuseable html that you might want to include into your HTML page. A great example is having a <code class=\"language-text\">navbar.html</code>, you can include this navbar in all your static websites. In the blog structure, jekyll included a footer, head, header, and other files like svg. Scalable Vector Graphic (SVG) are very popular in web development when rendering logos in the browser for their scalability in varies device screens.</p>\n<h3>_layouts</h3>\n<p>This folder is used for creating HTML for different static pages on your websites. You might want a page to look different depending on the content you want to display. For example if you had a <code class=\"language-text\">post.html</code> used for all your posts, all your posts will look uniform. Jekyll provides you with a few example html files, you can easily customize them to your needs.</p>\n<h3>_posts</h3>\n<p>This folder is where you create all your posts in a specific format, following this format is important since the jekyll will parse your files in a conventional way. These files can be saved as HTML or Markdown. <strong>All post must have <a href=\"http://jekyllrb.com/docs/frontmatter/\" target=\"_blank\">YAML Front Matter</a></strong>. The YAML Front Matter is how jekyll know how to build your static websites. When creating a post the naming convention is <code class=\"language-text\">YEAR-MONTH-DAY-name-of-blog.md</code>. In addition Jekyll allows you to add tags and categories to your post. Using the categories allows you to have different types of post like blog, music, anime, etc. You can also add tags your post for different topics like web development, html, css, javascript, etc. Just remember this folder is where you store all your posts.</p>\n<h3>_sass</h3>\n<p>This folder is where you store all the styles for your website. Syntactically Awesome Style Sheet (Sass) is a extension of CSS. This extension is a better way of writing CSS and follows the Don't Repeat Yourself (DRY) principle. Sass allows you to write less code by introducing variables, nested rules, mixins, inline imports, and more. At the end of the day your sass files will be converted into css which jekyll does for you. To learn more about Sass click <a href=\"http://sass-lang.com/guide\" target=\"_blank\">here</a>. Just remember this folder is where you can style your blog site, there are many jekyll themes you can look at and implement. Here are a few jekyll themes sites: </p>\n<ul>\n<li><a href=\"http://jekyllthemes.org/\" target=\"_blank\">jekyllthemes.org</a></li>\n<li><a href=\"https://github.com/jekyll/jekyll/wiki/Themes\" target=\"_blank\">wikiThemes</a></li>\n<li><a href=\"http://jekyllthemes.io/\" target=\"_blank\">jekyllthemes.io</a></li>\n</ul>\n<h3>css</h3>\n<p>This is the folder that converts all your sass files into css. This folder is important when using the jekyll with sass, you need this <code class=\"language-text\">main.scss</code> for jekyll to convert your sass files to css files. This is where you import all your sass files and jekyll will add them into your static websites.</p>\n<h3>.gitignore</h3>\n<p>This file is used when using git by excluding any specific files you don't want to save, example will be personal information like key and secret when accessing a API. Git is a version control system which allows you to save coding project on your local machine. The power of git is that you do not need internet to save you projects and allows you to save snapshot of your project every time you make a commit. Learn more about git by reading this book , <a href=\"https://git-scm.com/book/en/v2\" target=\"_blank\">Pro Git</a>.</p>\n<h3>_config.yml</h3>\n<p>This is all the configuration for your jekyll website. This file is where you can store global variables which you can use in your static website, some example will be your name, email address, github username, linkedin url, etc. Any plugin you want to use like pagination will also go in this file. If you want more information about configuration for jekyll click <a href=\"http://jekyllrb.com/docs/configuration/\" target=\"_blank\">here</a>.</p>\n<h3>about.md and index.html</h3>\n<p>These are the static website page that jekyll will render. The index.html is where all your posts will be rendered and is the home page. The about page will contain information about yourself in Markdown. <strong>Note these pages must have YAML Front Matter</strong>. You can create more static pages by saving a new html or markdown file at the root of this project. Examples of creating more html file might be a project page, contact page, etc.</p>\n<h3>feed.xml</h3>\n<p>This is used for a RSS feed which allows users to subscribe to your content. Jekyll already included everything you need for the RSS feed, all you have to do is change the name, description, and url in the <code class=\"language-text\">_config.yml</code> to your own.</p>\n<h3>Hosting on GitHub</h3>\n<p>Github will host one site for you and unlimited project sites for free. It is very easy to use and allows you to show off your projects to the world. They provide a quick get started tutorial, check it out by clicking this <a href=\"https://pages.github.com/\" target=\"_blank\">link</a>.</p>\n<h3>Conclusion</h3>\n<p>Jekyll allows you to customize your blog website by allowing you to add more features to your blog site. There are many features you can add to your blog site like pagination, 404.html, Disqus, Archive, etc. The web provides many resources on how to add these features to your jekyll project. Creating your blog website with Jekyll give you more control over your site than other CMS blog platforms. This is just a basic tutorial on how to use Jekyll to create your own blog site. Anyone can create a blog site using Jekyll and host it on GitHub!</p>","frontmatter":{"description":"How to create a blog website using Jekyll","title":"Creating a Blog With Jekyll"}}},"pageContext":{"slug":"/2016/2016-02-21/"}}}